一、if语句中的判断条件(nginx)

1、正则表达式匹配：
==:等值比较;
~：与指定正则表达式模式匹配时返回“真”，判断匹配与否时区分字符大小写；
~*：与指定正则表达式模式匹配时返回“真”，判断匹配与否时不区分字符大小写；
!~：与指定正则表达式模式不匹配时返回“真”，判断匹配与否时区分字符大小写；
!~*：与指定正则表达式模式不匹配时返回“真”，判断匹配与否时不区分字符大小写；

2、文件及目录匹配判断：
-f, !-f：判断指定的路径是否为存在且为文件；
-d, !-d：判断指定的路径是否为存在且为目录；
-e, !-e：判断指定的路径是否存在，文件或目录均可；
-x, !-x：判断指定路径的文件是否存在且可执行；



server {
   listen 80 default_server;   #禁止空主机头
   server_name _;
   return 404;
}
server {
  listen       80;
  server_name  192.168.10.1;
  index index.html index.htm index.php index.shtml;
  root  /export/htdocs;
  access_log  logs/192.168.10.1.log log;
  error_page   500 502 503 504  /50x.html;
#########后台禁止后要套用{ location{ }}模式 最后还需要要用location ....############
location ~ ^/gov/admin/ { 
allow 192.168.40.0/23;
allow 192.168.30.0/24;
deny all;
location ~ .*\.(php|php5|php4|shtml)?$ {
root /export/htdocs;
fastcgi_pass unix:/tmp/php-cgi.sock;
fastcgi_index index.php;
include fastcgi.conf;
}
}
#########禁止目录########
location ~ (/\.svn/|/include/config/|/lib/) {
deny all;
}
#########禁止目录php########
location ~ /upload/.*\.(php|php4|php5)?$ {
deny all;
}
#########限制一个php#########
        location ~ /ucapi.php {
                deny 192.168.200.200;
                allow 42.120.17.0/24;
                deny all;
          location ~ .*\.(php|php5|php4|shtml)?$ {
          root /export/htdocs;
          fastcgi_pass unix:/tmp/php-cgi.sock;
          fastcgi_index index.php;
          include fastcgi.conf;
                }
           }
location ~ .*\.(php|php5|php4|shtml)?$ {
root /export/htdocs;
try_files $uri =404;
fastcgi_pass unix:/tmp/php-cgi.sock;
fastcgi_index index.php;
include fastcgi.conf;
#include pathinfo.conf;
}
}
}
######################判断###########
            if ( $http_range = 'bytes=' ) {                           #如果range变量值为空,去掉range空请求头
            more_clear_input_headers "Range: bytes=";
            }
#############多重判断##################
Nginx多重条件判断(只是一个简单的例子，自己可以更改或者增加更多的判断条件)，下面是两个例子和写法:
1、可以作为nginx的停服更新使用，仅允许222.222.222.222或者内网的两个IP访问,其他IP都rewrite到停服页面
Nginx.conf中加入在你项目的正确位置
set $my_ip ''; 
if ( $remote_addr = 222.222.222.222){set $my_ip 1;} #注意这里的$remote_addr如何用了负载均衡的话,这里应该是$http_x_forwarded_for
if ( $remote_addr = 192.168.1.170 ){ set $my_ip 1;}
if ( $remote_addr = 192.168.1.169 ){ set $my_ip 1;}
if ( $my_ip != 1) {rewrite ^/design/(.*)\.php$ /tingfu.html?$1&;}  #将*.php转到tingfu.html

 2、访问某个php应用的时候我只想让内部的某个IP访问，其他的IP都转到另一个PHP上。如下:
访问test.php，且IP不等222.222.222.222的跳转到55555.php:
set $test '';
if ( $request_uri ~* /img/test.php ) {
        set $test P;
}

if ( $http_x_forwarded_for !~* ^222\.222\.222\.222.* ) {
        set $test "${test}C";
}

if ( $test = PC ) {  #当条件符合 访问test.php并且 ip不是222.222.222.222的 转发到55555.php
rewrite  ^(.*)$ /img/55555.php permanent;  
}