FROM openjdk:8-jre-alpine3.9
#时区和加速源
RUN echo "http://mirrors.tencentyun.com/alpine/v$(cat /etc/alpine-release | cut -d'.' -f1,2)/main" >/etc/apk/repositories && \
    echo "http://mirrors.tencentyun.com/alpine/v$(cat /etc/alpine-release | cut -d'.' -f1,2)/community" >>/etc/apk/repositories && \
    echo "http://mirrors.cloud.tencent.com/alpine/v$(cat /etc/alpine-release | cut -d'.' -f1,2)/main" >>/etc/apk/repositories && \
    echo "http://mirrors.cloud.tencent.com/alpine/v$(cat /etc/alpine-release | cut -d'.' -f1,2)/community" >>/etc/apk/repositories && \ 
    ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo 'Asia/Shanghai' > /etc/timezone;
#各种依赖
RUN apk add --no-cache \
		bash \
		libc6-compat \
		libzmq \
    && apk add --no-cache 'su-exec>=0.2';
# https://artifacts.elastic.co/GPG-KEY-elasticsearch
#各种变量
ENV GPG_KEY="46095ACC8548582C1A2699A9D27D666CD88E42B4" \
    PATH="$LOGSTASH_PATH:$PATH" \
    LOGSTASH_VERSION="7.6.2" \
    LOGSTASH_PATH="/usr/share/logstash/bin" \
    LOGSTASH_TARBALL="http://xxxxxxxxxxxxx/xxxxx/logstash-7.6.2.tar.gz" \
    LOGSTASH_TARBALL_ASC="https://artifacts.elastic.co/downloads/logstash/logstash-7.6.2.tar.gz.asc"
##########################
#	LOGSTASH_TARBALL_SHA1="a8bf7e7ba6c1a4a0d9867bc770cd8f92"

RUN set -ex; \
	apk add --no-cache --virtual .fetch-deps \
		ca-certificates \
		gnupg \
		openssl \
		tar \
	; \
	wget -O logstash.tar.gz "$LOGSTASH_TARBALL"; \
	\
	if [ "$LOGSTASH_TARBALL_ASC" ]; then \
		wget -O logstash.tar.gz.asc "$LOGSTASH_TARBALL_ASC"; \
		export GNUPGHOME="$(mktemp -d)"; \
		gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"; \
		gpg --batch --verify logstash.tar.gz.asc logstash.tar.gz; \
		rm -rf "$GNUPGHOME" logstash.tar.gz.asc; \
	fi; \
	\
	dir="$(dirname "$LOGSTASH_PATH")"; \
	\
	mkdir -p "$dir"; \
	tar -xf logstash.tar.gz --strip-components=1 -C "$dir"; \
	rm logstash.tar.gz; \
	\
	apk del .fetch-deps; \
	\
	export LS_SETTINGS_DIR="$dir/config"; \
# if the "log4j2.properties" file exists (logstash 5.x), let's empty it out so we get the default: "logging only errors to the console"
	if [ -f "$LS_SETTINGS_DIR/log4j2.properties" ]; then \
		cp "$LS_SETTINGS_DIR/log4j2.properties" "$LS_SETTINGS_DIR/log4j2.properties.dist"; \
		truncate -s 0 "$LS_SETTINGS_DIR/log4j2.properties"; \
	fi; \
	\
# set up some file permissions
	for userDir in \
		"$dir/config" \
		"$dir/data" \
	; do \
		if [ -d "$userDir" ]; then \
			chown -R root:root "$userDir"; \
		fi; \
	done; \
	\
        ln -sf /usr/share/logstash/bin/logstash /bin/logstash; \
	logstash --version
#各种配置
COPY docker-entrypoint.sh /
COPY logstash.conf /usr/share/logstash/config/logstash.conf
COPY jvm.options /usr/share/logstash/config
COPY log4j2.properties /usr/share/logstash/config/

RUN echo "http.host: 0.0.0.0" > /usr/share/logstash/config/logstash.yml; \
    echo "log.level: error" >> /usr/share/logstash/config/logstash.yml; \
    echo "pipeline.workers: 4" >> /usr/share/logstash/config/logstash.yml; \
    echo "pipeline.batch.size: 6000" >> /usr/share/logstash/config/logstash.yml; \
    echo "pipeline.batch.delay: 15" >> /usr/share/logstash/config/logstash.yml; \
    echo "path.data: /usr/share/logstash/data" >> /usr/share/logstash/config/logstash.yml

ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["-f", "/usr/share/logstash/config/logstash.conf"]
